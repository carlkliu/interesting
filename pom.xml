<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.carl</groupId>
	<artifactId>interesting</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<name>${project.artifactId}</name>
	<url>http://maven.apache.org</url>

	<properties>
		<jersey.version>2.22.2</jersey.version>
		<jetty.version>9.3.6.v20151106</jetty.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<rpm.prefix>/opt</rpm.prefix>
	</properties>
	<!-- jersey -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- config file -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
		</dependency>
		<!-- unit test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>
		<!-- database date source -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- quartz scheduler -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>2.2.1</version>
		</dependency>
		<!-- jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
		</dependency>
		<!-- jersey+Jetty -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-jetty-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-jetty</artifactId>
		</dependency>
		<!-- onc_rpc communication client package -->
		<dependency>
			<groupId>org.acplt</groupId>
			<artifactId>oncrpc</artifactId>
			<version>1.0.7</version>
		</dependency>
		<!-- log JAR -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<!-- JSON -->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>
		<!-- postgresql JDBC -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1003-jdbc4</version>
		</dependency>
		<!-- easyMock -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
		<!-- javax.mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.6</version>
		</dependency>

		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>
		<dependency>
			<groupId>dnsjava</groupId>
			<artifactId>dnsjava</artifactId>
			<version>2.1.6</version>
		</dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <!-- package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- RPM package -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1.4</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <prefix>${rpm.prefix}</prefix>
                    <group>Application/Collectors</group>
                    <autoProvides>false</autoProvides>
                    <autoRequires>false</autoRequires>
                    <needarch>true</needarch>
                    <targetOS>${os.name}</targetOS>
                    <mappings>
                        <mapping>
                            <filemode>744</filemode>
                            <directory>${rpm.prefix}/${project.artifactId}-${project.version}/lib/</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/lib</location>
                                </source>
                                <source>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.jar</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <filemode>744</filemode>
                            <directory>${rpm.prefix}/${project.artifactId}-${project.version}/conf/</directory>
                            <sources>
                                <source>
                                    <location>src/main/resources</location>
                                    <includes>
                                        <include>*.properties</include>
                                    </includes>
                                </source>
                                <source>
                                    <location>src/scripts/${project.artifactId}.service</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <filemode>744</filemode>
                            <directory>${rpm.prefix}/${project.artifactId}-${project.version}/bin/</directory>
                            <sources>
                                <source>
                                    <location>src/bin</location>
                                </source>
                            </sources>
                        </mapping>
                         <!-- build sql  into  rpm package  -->
                          <mapping>
                            <filemode>744</filemode>
                            <directory>${rpm.prefix}/${project.artifactId}-${project.version}</directory>
                            <sources>
                                <source>
                                    <location>.</location>
                                    <includes>
                                        <include>interesting_postgres.sql</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <!-- build sql  into  rpm package  -->
                    </mappings>
                    <postinstallScriptlet>
                        <script>
                            chown -R tomcat.tomcat ${rpm.prefix}/${project.artifactId}-${project.version};
                            ln -s ${rpm.prefix}/${project.artifactId}-${project.version}/bin/${project.artifactId} /usr/local/bin/${project.artifactId};
                            chmod 644 ${rpm.prefix}/${project.artifactId}-${project.version}/conf/${project.artifactId}.service
                            cp ${rpm.prefix}/${project.artifactId}-${project.version}/conf/${project.artifactId}.service /usr/lib/systemd/system;
                            systemctl daemon-reload;
                        </script>
                    </postinstallScriptlet>
                    <postremoveScriptlet>
                        <script>
                            rm -rf ${rpm.prefix}/${project.artifactId}-${project.version};
                            rm -f /usr/local/bin/${project.artifactId};
                            rm -f /usr/lib/systemd/system/${project.artifactId}.service;
                            rm  -f  ${rpm.prefix}/${project.artifactId}-${project.version}/interesting_postgres.sql; 
                            systemctl daemon-reload;
                        </script>
                    </postremoveScriptlet>
                </configuration>
            </plugin>
            <!-- unit test for report coverage -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <argLine>-XX:-UseSplitVerifier</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <formats>
                        <format>xml</format>
                    </formats>
                    <argLine>-XX:-UseSplitVerifier</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
